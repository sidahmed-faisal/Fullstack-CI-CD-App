# name: Movies CI/CD
# version: 1.0.0
# languages:
#     - Python
#     - Javascript

name: Movies CI/CD

# Triggers for the workflow
on:
    # Manual trigger using the workflow_dispatch event
    workflow_dispatch:
    
    # Automatic trigger on push events to the main branch
    push:
      branches:
        - main
        
    # Automatic trigger on pull request events targeting the main branch
    pull_request:
      branches:
        - main
      paths:
        - 'frontend/**'

defaults:
    run:
        working-directory: ./frontend
jobs:
  # Continuous Integration job
    ci_for_Frontend:
      runs-on: ubuntu-latest
      
      environment:
            name: Deployment
      steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Setup Node.js
            uses: actions/setup-node@v3
            with:
              node-version: 18.14
        
          - name: Install dependencies
            run: npm install

          - name: Linting
            id: lint
            run: npm run lint --fix

          - name: Tests
            id: tests
            run: CI=true npm test --passWithNoTests

          - name: Build
            if: steps.lint.outcome == 'success' && steps.tests.outcome == 'success'
            run: npm run build

  # Continuous Deployment job
    cd_for_Frontend:
      needs: [ci_for_Frontend]
      runs-on: ubuntu-latest
      
      environment:
        name: Deployment

      steps:
          - name: Checkout code
            uses: actions/checkout@v3
    
          - name: Setup Node.js
            uses: actions/setup-node@v3
            with:
              node-version: 18.14
            
          - name: Install dependencies
            run: npm install
    
          - name: Linting
            id: lint
            run: npm run lint --fix
    
          - name: Tests
            id: tests
            run: CI=true npm test --passWithNoTests
    
          - name: Build
            if: steps.lint.outcome == 'success' && steps.tests.outcome == 'success'
            run: npm run build
            
          - name: Configure AWS credentials

            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
              aws-region: us-east-1

          - name: Test correct login
            run: |
              aws sts get-caller-identity

          - name:  Login to Amazon ECR
            id: ecr
            uses: aws-actions/amazon-ecr-login@v2

          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Build the docker image
            env: 
              ECR_REGISTRY: ${{ steps.ecr.outputs.registry }}
              BACKEND_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}
              ECR_REPOSITORY: frontend
            run: |
              docker build --build-arg=REACT_APP_MOVIE_API_URL=$BACKEND_URL -t sidahmedfaisal/frontend:${GITHUB_SHA::7} .
              docker push sidahmedfaisal/frontend:${GITHUB_SHA::7}

